version: 2.1

jobs:
  check_go_mod:
    docker:
      - image: golang:1.14
    steps:
      - checkout
      - run:
          name: "Check go module up to date"
          command: ./scripts/ci/check_go_modules.sh

  check_readme_sync:
    docker:
      - image: golang:1.14
    steps:
      - checkout
      - run:
          name: "Check README in sync"
          command: ./scripts/ci/check_readme_in_sync.sh

  github-release:
    docker:
      - image: circleci/golang:1.14
    steps:
      - checkout
      - run: curl -sL https://git.io/goreleaser | bash
      
  publish_images:
    machine:
      enabled: true
    steps:
      - checkout
      - attach_workspace:
          at: /home/circleci/project
      - run:
          name: Load images into docker from workspace
          command: |
            docker load -i /home/circleci/project/sonobuoyImages.tar.gz
      - run: ./scripts/ci/publish.sh

  build_clients:
    machine:
      enabled: true
    steps:
      - checkout
      - run:
          name: "Build Sonobuoy binaries"
          command: make build/linux/amd64/sonobuoy build/linux/arm64/sonobuoy
      - persist_to_workspace:
          root: ~/project
          paths: 
            - build/linux/amd64/*
            - build/linux/arm64/*

  build_containers:
    machine:
      enabled: true
    steps:
      - checkout
      - attach_workspace:
          at: /home/circleci/project
      - run:
          name: "Build Sonobuoy container images"
          command: |
            make linux_containers
      - run:
          name: Save as tar files to persist to next step
          command: |
            docker save -o sonobuoyImages.tar.gz sonobuoy/sonobuoy sonobuoy/sonobuoy-amd64 sonobuoy/sonobuoy-arm64
      - persist_to_workspace:
          root: /home/circleci/project
          paths:
            - sonobuoyImages.tar.gz

  unit_tests:
    machine:
      enabled: true
    steps:
      - checkout
      - run:
          name: "Run unit and stress tests"
          command: VERBOSE=true make test stress

  integration_tests:
    machine:
      enabled: true
    steps:
      - checkout
      - run:
          name: "Install kind"
          command: |
            curl -L https://github.com/kubernetes-sigs/kind/releases/download/v0.7.0/kind-linux-amd64 --output kind
            chmod +x ./kind
            sudo mv ./kind /usr/local/bin
            curl -L https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 --output jq 
            chmod +x ./jq
            sudo mv ./jq /usr/local/bin
      - run:
          name: "Create kind cluster"
          command: |
            kind create cluster --config kind-config.yaml
      - attach_workspace:
          at: /home/circleci/project
      - run:
          name: Load images into docker from workspace
          command: |
            docker load -i /home/circleci/project/sonobuoyImages.tar.gz
      - run:
          name: "Run Sonobuoy integration tests"
          command: |
            SONOBUOY_CLI=../../build/linux/amd64/sonobuoy ./scripts/run_integration_tests.sh
      - store_artifacts:
          path: /tmp/artifacts
      - run:
          name: "Upload codecov results"
          command: bash <(curl -s https://codecov.io/bash)


workflows:
  version: 2
  checks:
    jobs:
      - check_go_mod:
          filters:
            tags:
              only: /^v.*/
      - check_readme_sync:
          filters:
            tags:
              only: /^v.*/
      - build_clients:
          filters:
            tags:
              only: /^v.*/
      - unit_tests:
          filters:
            tags:
              only: /^v.*/
      - build_containers:
          requires:
            - build_clients
          filters:
            tags:
              only: /^v.*/
      - integration_tests:
          requires:
            - build_clients
            - build_containers
          filters:
            tags:
              only: /^v.*/
      - publish_images:
          requires:
            - check_go_mod
            - check_readme_sync
            - unit_tests
            - build_clients
            - build_containers
            - integration_tests
          filters:
            branches:
              only: master
            tags:
              only: /^v.*/
      - github-release:
          requires:
            - publish_images
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
