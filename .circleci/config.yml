version: 2
jobs:
  download_go_modules:
    docker:
      - image: golang:1.13
    steps:
      - checkout
      - run:
          name: "Download go modules"
          command: go mod download
      - persist_to_workspace:
          root: /go
          paths:
            - pkg/mod/cache

  check_go_mod:
    docker:
      - image: golang:1.13
    steps:
      - checkout
      - run:
          name: "Check go module up to date"
          command: ./scripts/ci/check_go_modules.sh

  check_readme_sync:
    docker:
      - image: golang:1.13
    steps:
      - checkout
      - run:
          name: "Check README in sync"
          command: ./scripts/ci/check_readme_in_sync.sh

  build_and_publish:
    machine:
      enabled: true
    steps:
      - checkout
      - run: ./scripts/ci/publish.sh

  build_and_test:
    machine:
      enabled: true
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: "Install kind"
          command: |
            curl -L https://github.com/kubernetes-sigs/kind/releases/download/v0.5.1/kind-linux-amd64 --output kind
            chmod +x ./kind
            sudo mv ./kind /usr/local/bin
            curl -L https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 --output jq 
            chmod +x ./jq
            sudo mv ./jq /usr/local/bin
      - run:
          name: "Create kind cluster"
          command: |
            kind create cluster --config kind-config.yaml
            echo 'export KUBECONFIG="$(kind get kubeconfig-path --name="kind")"' >> $BASH_ENV
      - run:
          name: "Build Sonobuoy container image and add to kind cluster"
          command: make container deploy_kind GO_MODULES_PATH=/tmp/workspace/pkg/mod/cache
      - run:
          name: "Run unit and stress tests"
          command: VERBOSE=true make test stress GO_MODULES_PATH=/tmp/workspace/pkg/mod/cache
      - run:
          name: "Run Sonobuoy integration tests"
          command: |
            GO_MODULES_PATH=/tmp/workspace/pkg/mod/cache ./scripts/run_integration_tests.sh
      - store_artifacts:
          path: /tmp/artifacts
      - run:
          name: "Upload codecov results"
          command: bash <(curl -s https://codecov.io/bash)


workflows:
  version: 2
  checks:
    jobs:
      - check_readme_sync
      - download_go_modules
      - check_go_mod
      - build_and_test:
          requires:
            - download_go_modules
      - build_and_publish:
          requires:
            - build_and_test
          filters:
            branches:
              only: master
            tags:
              only: /^v.*/
