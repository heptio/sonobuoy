name: CI Test
on: [push, pull_request]
jobs:
  unit-test-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - name: Run unit tests
        env:
          VERBOSE: true
        run: |
          source ./scripts/build.sh; unit_local
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build binaries and images
        run: |
          source ./scripts/build.sh
          build_binaries
          linux_containers
          build_test_image
      - name: Save images to tar
        run: |
          source ./scripts/build.sh
          save_images_to_tar
      - name: Save artifacts
        uses: actions/upload-artifact@v2
        with:
          name: sonobuoy-binaries-images-${{ github.run_id }}
          path: |
            build/linux/amd64/sonobuoy
            build/linux/arm64/sonobuoy
            build/windows/amd64/sonobuoy.exe
            sonobuoyImages.tar
  stress-test-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run stress tests
        env:
          VERBOSE: true
        run: |
          source ./scripts/build.sh; stress
  integration-test-on-kind:
    runs-on: ubuntu-latest
    needs: [build, unit-test-linux]
    steps:
      - uses: actions/checkout@v2
      - name: Prepare cluster for tests
        run: |
          source ./scripts/build.sh;
          clean
          setup_kind_cluster
      - name: Download binaries and prebuilt images
        uses: actions/download-artifact@v2
        with:
          name: sonobuoy-binaries-images-${{ github.run_id }}
      - name: Ensure binaries are executable
        run: |
          chmod +x build/linux/amd64/sonobuoy
      - name: Show downloaded file info
        run: |
          pwd
          ls -lah
          find ./build
      - name: Build test image, load images, and run tests
        run: |
          source ./scripts/build.sh
          load_images_from_tar_into_cluster sonobuoyImages.tar
          docker image ls
          VERBOSE=true SONOBUOY_CLI=../../build/linux/amd64/sonobuoy integration
  push-images:
    if: ${{ github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    needs: [build, unit-test-linux, integration-test-on-kind, stress-test-linux]
    steps:
      - uses: actions/checkout@v2
      - name: Download binaries and prebuilt images
        uses: actions/download-artifact@v2
        with:
          name: sonobuoy-binaries-images-${{ github.run_id }}
      - name: Load images and verify
        run: |
          docker load -i sonobuoyImages.tar
          docker images
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push images
        run: |
          source ./scripts/build.sh
          gen_manifest_and_push_all
  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [push-images]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
